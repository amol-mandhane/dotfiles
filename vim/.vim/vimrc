" Autoreload .vimrc and .vim/vimrc {{{
autocmd! BufWritePost .vimrc source %
autocmd! BufWritePost vimrc source %
" }}}

" vundle settings {{{
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" }}}

" VIM Plugins {{{
Plugin 'gmarik/Vundle.vim'

Plugin 'gregsexton/MatchTag'
Plugin 'kien/ctrlp.vim'
Plugin 'mattn/emmet-vim'
Plugin 'moll/vim-bbye'
Plugin 'Raimondi/delimitMate'
Plugin 'scrooloose/nerdtree'
Plugin 'sjl/badwolf'

if filereadable(expand('~/.google-office'))
else
  Plugin 'Valloric/YouCompleteMe'
endif
" }}}

" General settings {{{
let mapleader = ","
scriptencoding utf-8
set encoding=utf-8
set timeoutlen=50
set mouse=a
set clipboard=unnamedplus
set autoread               " Autoreload
set hidden                 " set Vim like any other editor (buffers, etc)

set modelines=1
set shell=/bin/bash
" set switchbuf+=usetab,newtab

set number                 " Line numbers
set relativenumber
set numberwidth=6
set tw=79                  " width of document (used by gd)
set colorcolumn=80
call matchadd('ErrorMsg', '\%>100v.\+')

set list                   " show EOL
set listchars=tab:▸\ ,eol:¬
set showcmd
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.

syntax on
syntax sync minlines=256

set guioptions-=T
set guioptions-=mrL

set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max

set backspace=indent,eol,start    " Backspace in normal mode
set history=700
set undolevels=700

set nowrap                 " don't automatically wrap on load
set fo-=t                  " don't automatically wrap text when typing
set linebreak              " Wrap lines at convenient points

set scrolloff=2

set laststatus=2

autocmd BufWritePre * :%s/\s\+$//e      " Trim trailing whitespaces
" }}}

" Indentation {{{
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
filetype plugin on
filetype indent on

" }}}

" Swap backup {{{
set backup
set backupdir=~/.vim-tmp//,~/.tmp//,~/tmp//,/var/tmp//,/tmp//
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp//,~/.tmp//,~/tmp//,/var/tmp//,/tmp//
set writebackup
" }}}

" Searching {{{
set hlsearch
set incsearch
set ignorecase
set smartcase

nnoremap n nzzzv
nnoremap N Nzzzv

" Show search results in quickfix
nnoremap <silent> <leader>/ :execute 'vimgrep /'.@/.'/g %'<CR>:copen<CR>

" }}}

" Color scheme {{{
set t_Co=256

let g:badwolf_darkgutter = 1
let g:badwolf_tabline = 3
colorscheme badwolf
set background=dark

if has('x11')
    highlight IndentGuidesEven ctermbg=236
    highlight IndentGuidesOdd ctermbg=237
endif

" Highlight VCS conflict markers
call matchadd('ErrorMsg', '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$')
" }}}

" Highlighting {{{
set cursorline
set cursorcolumn
" }}}

" Shortcut Definitions {{{
inoremap <C-w> <Esc><C-w>

nnoremap <C-PageUp> :bnext<CR>
nnoremap <C-PageDown> :bprevious<CR>

nnoremap <leader>a :Ag<SPACE>

nnoremap H ^
nnoremap L $
inoremap <C-l> <C-x><C-l>
inoremap <C-f> <C-x><C-f>
" }}}

" Machine specific settings {{{
source ~/.machine_vimrc
" }}}

" Plugin Settings {{{

" CtrlP {{{
imap <C-p> <Esc><C-p>
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
if executable('ag')
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
    let g:ctrlp_use_caching = 0
endif
let g:ctrlp_max_files=0
" }}}

" YouCompleteMe {{{
let g:ycm_key_list_select_completion = ['<TAB>']
let g:ycm_key_list_previous_completion = ['<S-TAB>']
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_complete_in_comments = 1
let g:ycm_collect_identifiers_from_tags_files = 1

if filereadable(expand('~/.google-office'))
else
  let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"
endif
" }}}

" }}}

" Language specific settings {{{
autocmd FileType html,ng.html,jslayout imap <C-e> <Esc><C-y>,i
autocmd FileType html,ng.html,jslayout inoremap </ </<C-x><C-o>

autocmd FileType html,ng.html,jslayout set omnifunc=htmlcomplete#CompleteTags
" }}}
