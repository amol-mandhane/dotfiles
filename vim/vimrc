" Autoreload .vimrc and .vim/vimrc
autocmd! BufWritePost .vimrc source %
autocmd! BufWritePost vimrc source %

" vundle settings
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

" =========== Plugin: Operational plugins ===============
Plugin 'rust-lang/rust.vim'
Plugin 'bling/vim-airline'
" Plugin 'kien/ctrlp.vim'
" Plugin 'Shougo/unite.vim'
Plugin 'L9'
Plugin 'FuzzyFinder'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'Valloric/YouCompleteMe'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/syntastic'
Plugin 'sjl/gundo.vim'
" Plugin 'klen/python-mode'
Plugin 'davidhalter/jedi-vim'
" Plugin 'tell-k/vim-autopep8'
Plugin 'scrooloose/nerdcommenter'
Plugin 'jmcantrell/vim-virtualenv'
Plugin 'tpope/vim-surround'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'altercation/vim-colors-solarized'
Plugin 'lervag/vim-latex'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'octol/vim-cpp-enhanced-highlight'

Plugin 'MarcWeber/vim-addon-mw-utils'
" Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
" Plugin 'honza/vim-snippets'
Plugin 'Raimondi/delimitMate'
" Plugin 'funorpain/vim-cpplint'
Plugin 'c.vim'
Plugin 'mattn/emmet-vim'
Plugin 'godlygeek/tabular'
Plugin 'majutsushi/tagbar'
" Plugin 'django.vim'
Plugin 'sukima/xmledit'

" ============== GENERAL CONFIG ==============
let mapleader = ","
set timeoutlen=500
set mouse=a
set clipboard=unnamedplus
set number                        " Line numbers
set numberwidth=6
set backspace=indent,eol,start    " Backspace in normal mode
set autoread                      " Autoreload
set history=700
set undolevels=700
set hidden                 " set Vim like any other editor (butffers, etc)

set tw=79                  " width of document (used by gd)
set colorcolumn=80
set nowrap                 " don't automatically wrap on load
set fo-=t                  " don't automatically wrap text when typing
set linebreak              " Wrap lines at convenient points
set scrolloff=2

set laststatus=2           " Turn on vim-airline

set list                   " show EOL
autocmd BufWritePre * :%s/\s\+$//e      " Trim trailing whitespaces

syntax on
syntax sync minlines=256

" ============= Turn Off Swap Files =========
set noswapfile
set nobackup
set nowb

" ================ Indentation ======================
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
filetype plugin on
filetype indent on

" =============== Searching =========================

set hlsearch
set incsearch
set ignorecase
set smartcase

" ============== Color Scheme =======================
set t_Co=256
let g:solarized_termcolors=256
let g:solarized_bold=1
let g:solarized_italic=1
" set background=light
colorscheme solarized

if has('gui_running')
"    colorscheme solarized
endif

" =============== Highlighting =====================
set cursorline
set cursorcolumn

" au InsertEnter * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam"
" au InsertLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"
" au VimLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape underline"
" au VimEnter * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"

" Cursor automove issue
au InsertLeave * call cursor([getpos('.')[1], getpos('.')[2]+1])

set guifont=Inconsolata-dz\ for\ Powerline\ Medium\ 10
set guioptions -=T

" ============== Shortcuts ========================
" General shortcut creation function
function! CreateCommandShortcut(shortcut, command)
    exe 'nnoremap ' . a:shortcut . ' ' . a:command . '<Enter>'
    exe 'inoremap ' . a:shortcut . ' <Esc>' . a:command . '<Enter>i'
    exe 'vnoremap ' . a:shortcut . ' <Esc>' . a:command . '<Enter>'
endfunction

function! CreateShortcut(shortcut, command, ...)
    exe 'nnoremap ' . a:shortcut . ' ' . a:command
    exe 'inoremap ' . a:shortcut . ' <Esc>' . a:command
    if a:0 > 0
        exe 'vnoremap ' . a:shortcut . ' ' . a:command
    else
        exe 'vnoremap ' . a:shortcut . ' <Esc>' . a:command
    end
endfunction

call CreateCommandShortcut('<C-s>', ':update')     " Ctrl-S save
call CreateCommandShortcut('<C-z>', ':undo')       " Ctrl-Z undo
call CreateCommandShortcut('<C-y>', ':redo')       " Ctrl-Y redo
call CreateCommandShortcut('<C-S-z>', ':redo')     " Ctrl-Shift-Z redo

call CreateCommandShortcut('<C-S-k>', ':dl')       " Ctrl-Shift-K delete line

call CreateCommandShortcut('<C-t>', ':tabnew')      " Ctrl-T new tab
call CreateCommandShortcut('<C-q>', ':q')           " Ctrl-W close tab
call CreateCommandShortcut('<C-p>', ':FufFileWithFullCwd')

call CreateCommandShortcut('<C-l>', ':nohl')        " Ctrl-L close search
call CreateShortcut('<S-Home>', '<Esc>v^')
call CreateShortcut('<S-End>', '<Esc>v$')
" Decrement number. Increment by Ctrl-A
nnoremap <C-d> <C-x>

vnoremap <C-x> d
vnoremap <C-c> y
vnoremap <C-v> p
nnoremap <C-v> p
inoremap <C-v> <Esc>pi
inoremap <C-w> <Esc><C-w>
" =========== Plugin Configs ======================

" ======= vim-airline ===========
let g:airline_powerline_fonts=1
:
" ======= Nerdtree ==============
let NERDTreeShowHidden=0
let g:NERDTreeChDirMode=2

set fillchars+=vert:\ | let g:NERDTreeMirror=1

" ======== nerdtree-tabs ========
let g:nerdtree_tabs_open_on_console_startup=1

" ======== vim-indent-guides ====
" let g:indent_guides_start_level=1
" let g:indent_guides_guide_size=4
let g:indent_guides_enable_on_vim_startup=1

" ======== Syntastic ============
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_python_checkers = ['flake8']
let g:syntastic_cpp_compiler_options = '-std=c++11'

" ======== YouCompleteMe ========
let g:ycm_key_list_select_completion = ['<TAB>']
let g:ycm_key_list_previous_completion = ['<S-TAB>']
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_complete_in_comments = 1
let g:ycm_register_as_syntastic_checker = 1
let g:ycm_global_ycm_extra_conf = "/home/amol/dotfiles/vim/.ycm_extra_conf.py"


let g:jedi#popup_on_dot = 0
let g:jedi#popup_select_first = 0
let g:jedi#use_splits_not_buffers = "bottom"

" ======= SnipMate ==============
imap <C-i> <Plug>snipMateNextOrTrigger

" ========= c.vim ===============
let g:C_UseTool_cmake = 'yes'
let g:C_UseTool_doxygen = 'yes'

" ============== Startup =======================
autocmd vimenter * NERDTree

"autocmd BufWritePost *.h,*.cpp call Cpplint()
call vundle#end()
